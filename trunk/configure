#!/bin/bash 
#
# create freepascal Makefile to build skychart
#
# syntaxe :
#            ./configure [fpc=path_to_fpc] [lazarus=path_to_lazarus] [prefix=install_path]
#

# set parameters
if [ $# -gt 0 ]; then
   export "$@"
fi

dirs="skychart/component/synapse/source/lib \
     skychart/component/libsql \
     skychart/component/mrecsort \
     skychart/component/uniqueinstance \
     skychart/component/xmlparser \
     skychart/component/enhedits \
     skychart/component/radec \
     skychart/component/zoomimage \
     skychart/component/downloaddialog \
     skychart/component/jdcalendar \
     skychart/component/multidoc \
     skychart/component/vo \
     skychart/component \
     skychart/library/catalog \
     skychart/library/elp82 \
     skychart/library/satxy \
     skychart/library/series96 \
     skychart/library \
     skychart \
     varobs \
     . "

#  Try to locate fpc in PATH
if [ -z "$fpc" ]; then
   export fpc=$(which fpcmake | sed 's#/fpcmake##')
fi
#  Try fpc in standard location
if [ -z "$fpc" ]; then
  if [ -x /usr/bin/fpcmake ]; then 
   export  fpc=/usr/bin
  fi
fi
#  Try to locate fpc
if [ -z "$fpc" ]; then
   echo Warning! try to use locate to find FPC path, the option may not work depending your version of locate and the result my be completly wrong. It is better if you specify fpc= on the command line.
   export fpc=$(locate -n1 '\fpcmake'  | sed 's#/fpcmake##')
   echo fpc=$fpc
   read -p "[Press Enter to continue]"
fi
# fpc not found
if [ -z "$fpc" ]; then
   echo fpc compiler not found! 
   echo Please specify the location of the fpc compiler with :
   echo ./configure fpc=path_to_fpc
   exit 1
fi
echo using fpc in $fpc

#  Try Lazarus in standard location
if [ -z "$lazarus" ]; then
  if [ -d /usr/share/lazarus ]; then 
   export  lazarus=/usr/share/lazarus
  fi
fi
#  Try to locate Lazarus lcl
if [ -z "$lazarus" ]; then
   echo Warning! try to use locate to find LAZARUS path, the option may not work depending your version of locate and the result my be completly wrong. It is better if you specify lazarus= on the command line.
   export lazarus=$(locate -n1 lcl/lclclasses.pp | sed 's#/lcl/lclclasses.pp##')
   echo lazarus=$lazarus
   read -p "[Press Enter to continue]"
fi
# Lazarus not found
if [ -z "$lazarus" ]; then
   echo Lazarus library not found! 
   echo Please specify the location of Lazarus installation with :
   echo ./configure lazarus=path_to_lazarus
   exit 1
fi
echo using Lazarus in $lazarus

#  Install directory
if [ -z "$prefix" ]; then
   export prefix=/tmp/skychart
fi
echo installing in $prefix

basedir=$(pwd)
for dir in $dirs 
do
   echo create $dir/Makefile 
   cd $dir
   sed "s#%LAZDIR%#$lazarus#" Makefile.in > Makefile.fpc
   sed -i "s#%PREFIX%#$prefix#" Makefile.fpc
   $fpc/fpcmake -q Makefile.fpc
   cd $basedir
done

# replace fpc install by own script and add uninstall script
sed  -i 's/^install:\(.*\)$/install: \n\t.\/install.sh \$(PREFIX)\nuninstall: \n\t.\/uninstall.sh \$(PREFIX)/g' Makefile

# add data install
cat >> Makefile <<EOF 
data:
	\$(MAKE) -C tools all
install_data:
	\$(MAKE) -C tools install 
uninstall_data:
	\$(MAKE) -C tools uninstall
EOF
cd tools
sed "s#%PREFIX%#$prefix#" Makefile.in > Makefile
cd $basedir

echo
echo You can now run make 
echo then make install 
echo and make install_data
echo

